name: Deploy
on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/deploy.yml
      - "*.tf"
  workflow_dispatch:

defaults:
  run:
    shell: bash -exuo pipefail {0}

env:
  GCP_SERVICE_ACCOUNT: infrastructure@arik-kfir.iam.gserviceaccount.com
  GCP_WORKLOAD_IDENTITY_PROVIDER: projects/887552287733/locations/global/workloadIdentityPools/github-actions/providers/default
  GCP_CLI_VERSION: 426.0.0
  TERRAFORM_VERSION: 1.4.3
  TF_IN_AUTOMATION: true

concurrency:
  group: production
  cancel-in-progress: false

jobs:

  plan-terraform:
    name: Plan Terraform
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v1
        with:
          version: ${{ env.GCP_CLI_VERSION }}
      - run: terraform fmt -check -recursive -no-color -diff
      - run: terraform init -input=false
      - run: terraform plan -input=false -lock-timeout=180s -out tfplan
      - run: tar -c -j -v -f tfplan.tar.bz2 .terraform .terraform.lock.hcl *.tf tfplan
      - uses: actions/upload-artifact@v3
        with:
          name: plan
          path: tfplan.tar.bz2
          if-no-files-found: error
          retention-days: 1

  apply-terraform:
    name: Apply Terraform
    needs: plan-terraform
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    environment: production
    permissions:
      id-token: write
    outputs:
      gcp_region: ${{ steps.out.outputs.gcp_region }}
      main_gke_cluster_name: ${{ steps.out.outputs.main_gke_cluster_name }}
      main_gke_cluster_location: ${{ steps.out.outputs.main_gke_cluster_location }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false
      - uses: actions/download-artifact@v3
        with:
          name: plan
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v1
        with:
          install_components: gke-gcloud-auth-plugin
          version: ${{ env.GCP_CLI_VERSION }}
      - run: tar xjvf tfplan.tar.bz2
      - run: terraform apply -input=false -lock-timeout=180s -auto-approve tfplan
      - run: terraform output -json > output.json
      - run: |
          for key in $(jq -r 'keys[]' output.json); do
            echo "${key}=$(jq -r ".${key}.value" output.json)" >> "$GITHUB_OUTPUT"
          done
        id: out

  sync-delivery-repository:
    name: Sync "delivery" repository
    needs: apply-terraform
    uses: arik-kfir/delivery/.github/workflows/sync-gke-cluster-info.yml@main
    with:
      gke_cluster_name: ${{ needs.apply-terraform.outputs.main_gke_cluster_name }}
      gke_cluster_location: ${{ needs.apply-terraform.outputs.main_gke_cluster_location }}
    secrets: inherit

  apply-fluxcd:
    name: Apply FluxCD
    needs: [ sync-delivery-repository, apply-terraform ]
    runs-on: ubuntu-22.04
    env:
      FLUXCD_VERSION: 2.0.0-rc.1
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v1
        with:
          version: ${{ env.GCP_CLI_VERSION }}
      - uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ needs.apply-terraform.outputs.main_gke_cluster_name }}
          location: ${{ needs.apply-terraform.outputs.main_gke_cluster_location }}
      - run: |
          if kubectl get -n default configmap/cluster-info; then
            cat > patch.yaml <<EOF
          data:
            name: ${GKE_CLUSTER_NAME}
            gke_cluster_name: ${GKE_CLUSTER_NAME}
            region: ${GKE_CLUSTER_REGION}
            gke_cluster_region: ${GKE_CLUSTER_REGION}
            zone: ${GKE_CLUSTER_ZONE}
            gke_cluster_zone: ${GKE_CLUSTER_ZONE}
          EOF
            kubectl patch -n default configmap/cluster-info --patch-file=patch.yaml
          else
            kubectl create -n default configmap cluster-info \
              --from-literal=name=${GKE_CLUSTER_NAME} \
              --from-literal=gke_cluster_name=${GKE_CLUSTER_NAME} \
              --from-literal=region=${GKE_CLUSTER_REGION} \
              --from-literal=gke_cluster_region=${GKE_CLUSTER_REGION} \
              --from-literal=zone=${GKE_CLUSTER_ZONE} \
              --from-literal=gke_cluster_zone=${GKE_CLUSTER_ZONE}
          fi
        env:
          GKE_CLUSTER_NAME: ${{ needs.apply-terraform.outputs.main_gke_cluster_name }}
          GKE_CLUSTER_REGION: ${{ needs.apply-terraform.outputs.gcp_region }}
          GKE_CLUSTER_ZONE: ${{ needs.apply-terraform.outputs.main_gke_cluster_location }}
      - uses: fluxcd/flux2/action@main
        with:
          version: ${{ env.FLUXCD_VERSION }}
      - run: |
          flux bootstrap github \
            --components-extra=image-reflector-controller,image-automation-controller \
            --interval 5m \
            --owner arik-kfir \
            --repository delivery \
            --read-write-key \
            --branch main \
            --path clusters/${MAIN_GKE_CLUSTER_NAME} \
            --reconcile \
            --author-email flux@kfirs.com \
            --author-name "FluxCD Bot" \
            --timeout 30m \
            --version=v${FLUXCD_VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.FLUXCD_PAT }}
          MAIN_GKE_CLUSTER_NAME: ${{ needs.apply-terraform.outputs.main_gke_cluster_name }}
